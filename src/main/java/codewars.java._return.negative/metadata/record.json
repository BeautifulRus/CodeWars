{
  "id" : "55685cd7ad70877c23000102",
  "name" : "Return Negative",
  "slug" : "return-negative",
  "url" : "https://www.codewars.com/kata/55685cd7ad70877c23000102",
  "category" : "reference",
  "languages" : [ "csharp", "python", "javascript", "haskell", "ruby", "java", "coffeescript", "cpp", "elixir", "typescript", "go", "julia", "kotlin", "nasm", "groovy", "scala", "c", "php", "racket", "cfml", "crystal", "r", "dart", "perl", "cobol", "factor", "d", "ocaml", "commonlisp", "clojure", "rust" ],
  "path" : "/projects/66abbf14c8bba92eb2515e35/",
  "selectedLanguage" : "java",
  "description" : "In this simple assignment you are given a number and have to make it negative. But maybe the number is already negative?\n\n### Examples\n\n``` text\nInput:  1  =>  Output: -1\nInput: -5  =>  Output: -5\nInput:  0  =>  Output:  0\n```\n``` c\nmakeNegative(1);  // return -1\nmakeNegative(-5); // return -5\nmakeNegative(0);  // return 0\n```\n``` d\nmakeNegative(1);  // return -1\nmakeNegative(-5); // return -5\nmakeNegative(0);  // return 0\n```\n``` cfml\nmakeNegative(1);  // return -1\nmakeNegative(-5); // return -5\nmakeNegative(0);  // return 0\n```\n``` csharp\nKata.MakeNegative(1);  // return -1\nKata.MakeNegative(-5); // return -5\nKata.MakeNegative(0);  // return 0\n```\n``` java\nKata.makeNegative(1);  // return -1\nKata.makeNegative(-5); // return -5\nKata.makeNegative(0);  // return 0\n```\n``` crystal\nmake_negative(1);  # return -1\nmake_negative(-5); # return -5\nmake_negative(0);  # return 0\n```\n``` r\nmake_negative(1);  # return -1\nmake_negative(-5); # return -5\nmake_negative(0);  # return 0\n```\n``` python\nmake_negative(1);  # return -1\nmake_negative(-5); # return -5\nmake_negative(0);  # return 0\n```\n``` javascript\nmakeNegative(1);    // return -1\nmakeNegative(-5);   // return -5\nmakeNegative(0);    // return 0\nmakeNegative(0.12); // return -0.12\n```\n``` dart\nmakeNegative(1);    // return -1\nmakeNegative(-5);   // return -5\nmakeNegative(0);    // return 0\nmakeNegative(0.12); // return -0.12\n```\n``` typescript\nmakeNegative(1);  // return -1\nmakeNegative(-5); // return -5\nmakeNegative(0);  // return 0\n```\n``` cpp\nmakeNegative(1);  // return -1\nmakeNegative(-5); // return -5\nmakeNegative(0);  // return 0\n```\n``` haskell\nmakeNegative    1 -- return -1\nmakeNegative (-5) -- return -5\nmakeNegative    0 -- return 0\nmakeNegative 0.12 -- return -0.12\n```\n``` ruby\nmakeNegative(1);  # return -1\nmakeNegative(-5); # return -5\nmakeNegative(0);  # return 0\n```\n``` coffeescript\nmakeNegative 1    # return -1\nmakeNegative -5   # return -5\nmakeNegative 0    # return 0\n```\n``` elixir\nmake_negative 1    # return -1\nmake_negative -5   # return -5\nmake_negative 0    # return 0\n```\n``` go\n\nMakeNegative(1)    // return -1\nMakeNegative(-5)   // return -5\nMakeNegative(0)    // return 0\n\n```\n``` julia\nKata.makenegative(1)  # return -1\nKata.makenegative(-5) # return -5\nKata.makenegative(0)  # return 0\n```\n``` kotlin\nKata().makeNegative(1)  // return -1\nKata().makeNegative(-5) // return -5\nKata().makeNegative(0)  // return 0\n```\n``` nasm\nmake_negative(1);    // return -1\nmake_negative(-5);   // return -5\nmake_negative(0);    // return 0\n```\n``` groovy\nKata.makeNegative(1)    // return -1\nKata.makeNegative(-5)   // return -5\nKata.makeNegative(0)    // return 0\n```\n``` php\nmakeNegative(1)    // return -1\nmakeNegative(-5)   // return -5\nmakeNegative(0)    // return 0\nmakeNegative(0.12) // return -0.12\n```\n``` racket\n(make-negative 1)    ; -1\n(make-negative -5)   ; -5\n(make-negative 0)    ; 0\n(make-negative 0.12) ; -0.12\n```\n\n``` rust\nmake_negative(1);  // return -1 \nmake_negative(-5); // return -5\nmake_negative(0);  // return 0\n```\n\n``` scala\nNegative.makeNegative(1)  // return -1\nNegative.makeNegative(-5) // return -5\nNegative.makeNegative(0)  // return 0\n```\n``` perl\nKata::make_negative(1)     # return -1\nKata::make_negative(-5)    # return -5\nKata::make_negative(0)     # return 0\nKata::make_negative(0.12); # return -0.12\n```\n``` cobol\n        MAKE-NEGATIVE 1\n      * RESULT = -1\n        MAKE-NEGATIVE -5\n      * RESULT = -5\n        MAKE-NEGATIVE 0\n      * RESULT = 0\n```\n``` clojure\n(make-negative  1)  ; return -1\n(make-negative  -5) ; return -5\n(make-negative  0)  ; return 0\n```\n\n### Notes\n\n- The number can be negative already, in which case no change is required.\n- Zero (0) is not checked for any specific sign. Negative zeros make no mathematical sense.\n",
  "rank" : {
    "id" : -8,
    "name" : "8 kyu",
    "color" : "white"
  },
  "tags" : [ "Fundamentals" ],
  "workUrl" : "https://www.codewars.com/kata/55685cd7ad70877c23000102/train/java",
  "completed" : false
}