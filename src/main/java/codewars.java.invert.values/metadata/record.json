{
  "id" : "5899dc03bc95b1bf1b0000ad",
  "name" : "Invert values",
  "slug" : "invert-values",
  "url" : "https://www.codewars.com/kata/5899dc03bc95b1bf1b0000ad",
  "category" : "reference",
  "languages" : [ "python", "javascript", "php", "haskell", "csharp", "crystal", "ruby", "java", "coffeescript", "cpp", "c", "elixir", "nasm", "kotlin", "racket", "dart", "factor", "rust", "julia", "typescript", "r", "d", "riscv", "scala", "go", "lua" ],
  "path" : "/projects/66b4d43c3fd460cfdcb22ad2/",
  "selectedLanguage" : "java",
  "description" : "Given a set of numbers, return the additive inverse of each. Each positive becomes negatives, and the negatives become positives.\n\n```\n[1, 2, 3, 4, 5] --> [-1, -2, -3, -4, -5]\n[1, -2, 3, -4, 5] --> [-1, 2, -3, 4, -5]\n[] --> []\n```\n\n```if:javascript,python,ruby,php,elixir,dart,go,lua\nYou can assume that all values are integers. Do not mutate the input array.\n```\n\n```if:c,riscv\n### Notes:\n- All values are greater than `INT_MIN`\n- The input should be modified, not returned.\n```\n\n~~~if:riscv\nRISC-V: The function signature is:\n\n```c\nvoid invert(int *arr, size_t size);\n```\n\nThe input array is `arr` which contains `size` elements. Mutate the array in-place according to the above specification. You do not need to return anything.\n~~~\n",
  "rank" : {
    "id" : -8,
    "name" : "8 kyu",
    "color" : "white"
  },
  "tags" : [ "Lists", "Fundamentals", "Arrays" ],
  "workUrl" : "https://www.codewars.com/kata/5899dc03bc95b1bf1b0000ad/train/java",
  "completed" : false
}